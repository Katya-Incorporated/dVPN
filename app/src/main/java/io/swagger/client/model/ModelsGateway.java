/*
 * Menshen API
 * This is a LEAP VPN Service API
 *
 * OpenAPI spec version: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ModelsGateway
 */

public class ModelsGateway {
  @SerializedName("bucket")
  private String bucket = null;

  @SerializedName("experimental")
  private Boolean experimental = null;

  @SerializedName("healthy")
  private Boolean healthy = null;

  @SerializedName("host")
  private String host = null;

  @SerializedName("ip_addr")
  private String ipAddr = null;

  @SerializedName("ip6_addr")
  private String ip6Addr = null;

  @SerializedName("last_seen_millis")
  private Long lastSeenMillis = null;

  @SerializedName("load")
  private BigDecimal load = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("overloaded")
  private Boolean overloaded = null;

  @SerializedName("port")
  private Integer port = null;

  @SerializedName("transport")
  private String transport = null;

  @SerializedName("type")
  private String type = null;

  public ModelsGateway bucket(String bucket) {
    this.bucket = bucket;
    return this;
  }

   /**
   * Bucket is a \&quot;bucket\&quot; tag that connotes a resource group that a user may or may not have access to. An empty bucket string implies that it is open access
   * @return bucket
  **/
  @ApiModelProperty(value = "Bucket is a \"bucket\" tag that connotes a resource group that a user may or may not have access to. An empty bucket string implies that it is open access")
  public String getBucket() {
    return bucket;
  }

  public void setBucket(String bucket) {
    this.bucket = bucket;
  }

  public ModelsGateway experimental(Boolean experimental) {
    this.experimental = experimental;
    return this;
  }

   /**
   * An experimental gateway flags any gateway that, for whatever reason, is not deemed stable. The expectation is that clients have to opt-in to experimental gateways (and bridges too).
   * @return experimental
  **/
  @ApiModelProperty(value = "An experimental gateway flags any gateway that, for whatever reason, is not deemed stable. The expectation is that clients have to opt-in to experimental gateways (and bridges too).")
  public Boolean isExperimental() {
    return experimental;
  }

  public void setExperimental(Boolean experimental) {
    this.experimental = experimental;
  }

  public ModelsGateway healthy(Boolean healthy) {
    this.healthy = healthy;
    return this;
  }

   /**
   * Not used now - we could potentially flag gateways that are planned to undergo maintenance mode some time in advance. We can also automatically flag as not healthy gateways that appear not to be routing to the internet.
   * @return healthy
  **/
  @ApiModelProperty(value = "Not used now - we could potentially flag gateways that are planned to undergo maintenance mode some time in advance. We can also automatically flag as not healthy gateways that appear not to be routing to the internet.")
  public Boolean isHealthy() {
    return healthy;
  }

  public void setHealthy(Boolean healthy) {
    this.healthy = healthy;
  }

  public ModelsGateway host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Host is a unique identifier for the gateway host. It does not need to resolve, since we&#39;re not using DNS to resolve the gateways.
   * @return host
  **/
  @ApiModelProperty(value = "Host is a unique identifier for the gateway host. It does not need to resolve, since we're not using DNS to resolve the gateways.")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public ModelsGateway ipAddr(String ipAddr) {
    this.ipAddr = ipAddr;
    return this;
  }

   /**
   * IPAddr is the IPv4 address
   * @return ipAddr
  **/
  @ApiModelProperty(value = "IPAddr is the IPv4 address")
  public String getIpAddr() {
    return ipAddr;
  }

  public void setIpAddr(String ipAddr) {
    this.ipAddr = ipAddr;
  }

  public ModelsGateway ip6Addr(String ip6Addr) {
    this.ip6Addr = ip6Addr;
    return this;
  }

   /**
   * IP6Addr is the IPv6 address
   * @return ip6Addr
  **/
  @ApiModelProperty(value = "IP6Addr is the IPv6 address")
  public String getIp6Addr() {
    return ip6Addr;
  }

  public void setIp6Addr(String ip6Addr) {
    this.ip6Addr = ip6Addr;
  }

  public ModelsGateway lastSeenMillis(Long lastSeenMillis) {
    this.lastSeenMillis = lastSeenMillis;
    return this;
  }

   /**
   * LastSeenMillis is a unix time in milliseconds representing the last time we received a heartbeat update from this gateway
   * @return lastSeenMillis
  **/
  @ApiModelProperty(value = "LastSeenMillis is a unix time in milliseconds representing the last time we received a heartbeat update from this gateway")
  public Long getLastSeenMillis() {
    return lastSeenMillis;
  }

  public void setLastSeenMillis(Long lastSeenMillis) {
    this.lastSeenMillis = lastSeenMillis;
  }

  public ModelsGateway load(BigDecimal load) {
    this.load = load;
    return this;
  }

   /**
   * Load is the fractional load received from the menshen agent. For the time being it is a synthethic metric that takes into account number of clients and network information for the node.
   * @return load
  **/
  @ApiModelProperty(value = "Load is the fractional load received from the menshen agent. For the time being it is a synthethic metric that takes into account number of clients and network information for the node.")
  public BigDecimal getLoad() {
    return load;
  }

  public void setLoad(BigDecimal load) {
    this.load = load;
  }

  public ModelsGateway location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Location is the canonical label for the location of the gateway.
   * @return location
  **/
  @ApiModelProperty(value = "Location is the canonical label for the location of the gateway.")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public ModelsGateway overloaded(Boolean overloaded) {
    this.overloaded = overloaded;
    return this;
  }

   /**
   * Overloaded should be set to true if the fractional load is above threshold.
   * @return overloaded
  **/
  @ApiModelProperty(value = "Overloaded should be set to true if the fractional load is above threshold.")
  public Boolean isOverloaded() {
    return overloaded;
  }

  public void setOverloaded(Boolean overloaded) {
    this.overloaded = overloaded;
  }

  public ModelsGateway port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * The (primary) port this gateway is listening on.
   * @return port
  **/
  @ApiModelProperty(value = "The (primary) port this gateway is listening on.")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public ModelsGateway transport(String transport) {
    this.transport = transport;
    return this;
  }

   /**
   * TCP, UDP, KCP or Quic. This was called \&quot;protocol\&quot; in previous versions of the API.
   * @return transport
  **/
  @ApiModelProperty(value = "TCP, UDP, KCP or Quic. This was called \"protocol\" in previous versions of the API.")
  public String getTransport() {
    return transport;
  }

  public void setTransport(String transport) {
    this.transport = transport;
  }

  public ModelsGateway type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type is the type of gateway. The only valid type as of 2023 is openvpn.
   * @return type
  **/
  @ApiModelProperty(value = "Type is the type of gateway. The only valid type as of 2023 is openvpn.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsGateway modelsGateway = (ModelsGateway) o;
    return Objects.equals(this.bucket, modelsGateway.bucket) &&
        Objects.equals(this.experimental, modelsGateway.experimental) &&
        Objects.equals(this.healthy, modelsGateway.healthy) &&
        Objects.equals(this.host, modelsGateway.host) &&
        Objects.equals(this.ipAddr, modelsGateway.ipAddr) &&
        Objects.equals(this.ip6Addr, modelsGateway.ip6Addr) &&
        Objects.equals(this.lastSeenMillis, modelsGateway.lastSeenMillis) &&
        Objects.equals(this.load, modelsGateway.load) &&
        Objects.equals(this.location, modelsGateway.location) &&
        Objects.equals(this.overloaded, modelsGateway.overloaded) &&
        Objects.equals(this.port, modelsGateway.port) &&
        Objects.equals(this.transport, modelsGateway.transport) &&
        Objects.equals(this.type, modelsGateway.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucket, experimental, healthy, host, ipAddr, ip6Addr, lastSeenMillis, load, location, overloaded, port, transport, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsGateway {\n");
    
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    experimental: ").append(toIndentedString(experimental)).append("\n");
    sb.append("    healthy: ").append(toIndentedString(healthy)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    ipAddr: ").append(toIndentedString(ipAddr)).append("\n");
    sb.append("    ip6Addr: ").append(toIndentedString(ip6Addr)).append("\n");
    sb.append("    lastSeenMillis: ").append(toIndentedString(lastSeenMillis)).append("\n");
    sb.append("    load: ").append(toIndentedString(load)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    overloaded: ").append(toIndentedString(overloaded)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    transport: ").append(toIndentedString(transport)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

